importScripts("./mt-main-and-worker.js?v=5","./beautify-html.min.js"),TVR_DEV_MODE=self.name&&0===self.name.indexOf("TVR_DEV_MODE"),function(){var e=MTMainAndWorker;onmessage=function(a){var s=a.data,i=s.taskName;if(!t[i])return postMessage({log:"Task does not exist: "+i,success:!1}),!1;e.startT("worker_task_"+i),s.delay?setTimeout((function(){t[i](s,a),e.endT("worker_task_"+i,1)}),s.delay):(t[i](s,a),e.endT("worker_task_"+i,1))};var t={postMessage:function(e,t){e.channel=t.channel,e.taskName=t.taskName,e.workerID=t.workerID,e.cb=t.cb,e.cb_failure=t.cb_failure,e.cb_complete=t.cb_complete,e.mainThreadData=t.mainThreadData,e.terminateOnCompletion=t.terminateOnCompletion,e.passBack=t.passBack,postMessage(e)},initWorkers:function(e,a){t.postMessage({log:"Workers initiated"},e)},formatHTML:function(a,s){t.postMessage({log:"We will process the HTML",html:e.formatHTMLString(a.html,a.custom,a.hasPseudo,self.html_beautify,a.overlayParentIsAlt)},a)},beautifyHTMLTask:function(a,s){t.postMessage({log:"We will beautify the HTML",code:e.beautifyHTMLString(a.code),mode:a.mode,aspect:a.aspect,presentChoice:a.presentChoice,selectText:a.selectText,justReturn:a.justReturn},a)},flattenToUrlParams:function(e,a){const s=[];for(const i in e)if(Object.prototype.hasOwnProperty.call(e,i)){const n=a?`${a}[${i}]`:i,o=e[i];"object"!=typeof o||null===o||o instanceof File||o instanceof Blob?s.push(encodeURIComponent(n)+"="+encodeURIComponent(null==o?"":o)):s.push(t.flattenToUrlParams(o,n))}return s.join("&")},ajaxFetch:async function(e,a){let s={};try{const a={method:e.type||"GET",headers:e.headers||{}},i=a.method.toUpperCase();if("POST"===i)e.data instanceof FormData?a.body=e.data:"string"==typeof e.data?(a.body=e.data,a.headers["Content-Type"]="application/x-www-form-urlencoded; charset=UTF-8"):"object"==typeof e.data&&(a.body=t.flattenToUrlParams(e.data),a.headers["Content-Type"]="application/x-www-form-urlencoded; charset=UTF-8");else if("GET"===i&&e.data){let a="";if("string"==typeof e.data?a=e.data:"object"==typeof e.data&&(a=t.flattenToUrlParams(e.data)),a){const t=e.url.includes("?")?"&":"?";e.url+=t+a}}const n=new AbortController;a.signal=n.signal;const o=e.timeout||3e4,r=setTimeout((()=>n.abort()),o),l=await fetch(e.url,a);let c;if(clearTimeout(r),c="json"===e.dataType?await l.json():await l.text(),s={success:!0,responseData:c,status:l.status,statusText:l.statusText},e.cb_ww){let a=e.cb_ww.funcName;t[a]&&await t[a](e,c,s)}}catch(e){const t="AbortError"===e.name;s={failure:!0,error:e.message,xhrSim:{status:0,responseText:"",statusText:t?"timeout":"Network Error",errorThrown:e.message},textStatus:t?"timeout":"error"}}return s},ajaxFetchTask:async function(e,a){let s=await t.ajaxFetch(e,a);t.postMessage(s,e)},getNearestAIRegionTask:async function(e,a){const s=await t.ajaxFetch({url:"https://ipinfo.io/json",dataType:"json",headers:{Accept:"application/json"}},a);if(!s.success||!s.responseData?.loc)return void t.postMessage({log:"Could not get location, default to US",region:"us-central1",label:"United States (Iowa)"},e);const[i,n]=s.responseData.loc.split(",").map(parseFloat),o=[{region:"europe-north1",label:"Finland",lat:60.1695,lng:24.9354},{region:"europe-southwest1",label:"Spain (Madrid)",lat:40.4168,lng:-3.7038},{region:"europe-west1",label:"Belgium",lat:50.8503,lng:4.3517},{region:"europe-west4",label:"Netherlands",lat:52.3676,lng:4.9041},{region:"europe-west8",label:"Italy (Milan)",lat:45.4642,lng:9.19},{region:"europe-west9",label:"France (Paris)",lat:48.8566,lng:2.3522},{region:"us-central1",label:"United States (Iowa)",lat:41.2565,lng:-95.9345},{region:"us-east1",label:"United States (South Carolina)",lat:33.8361,lng:-81.1637},{region:"us-east4",label:"United States (Virginia)",lat:37.4316,lng:-78.6569},{region:"us-east5",label:"United States (Columbus)",lat:39.9612,lng:-82.9988},{region:"us-south1",label:"United States (Dallas)",lat:32.7767,lng:-96.797},{region:"us-west1",label:"United States (Oregon)",lat:45.5231,lng:-122.6765}];function r(e,t,a,s){const i=(a-e)*Math.PI/180,n=(s-t)*Math.PI/180,o=Math.sin(i/2)**2+Math.cos(e*Math.PI/180)*Math.cos(a*Math.PI/180)*Math.sin(n/2)**2;return 12742*Math.atan2(Math.sqrt(o),Math.sqrt(1-o))}let l=null,c=1/0;for(const e of o){const t=r(i,n,e.lat,e.lng);t<c&&(c=t,l=e)}t.postMessage({log:"Found closest Gemini region",region:l.region,label:l.label,country:s.responseData.country},e)},maxRevisions:15,getRevisionIds:async function({sortDesc:t=!0}={}){try{let a=e.db;await a.init("themeover_db","revision_table");const s=a.dbInstance.transaction("revision_table","readonly"),i=s.objectStore("revision_table").getAll();let n=(await new Promise(((e,t)=>{i.onsuccess=t=>e(t.target.result),i.onerror=t}))).filter((e=>e.id)).map((e=>({id:e.id})));return t?n.sort(((e,t)=>parseInt(t.id)-parseInt(e.id))):n.sort(((e,t)=>parseInt(e.id)-parseInt(t.id))),n}catch(e){return console.error("getRevisionIds failed:",e),[]}},pullRevisionsFromServer:async(e,a)=>{try{const s=(await t.ajaxFetch({url:e.ajaxUrl+"&copy_revision_locally&recent_revisions="+(e.recent||5),dataType:"json"},a)).responseData;s&&await t.saveRemoteRevisionsToIndexedDB(s)}catch(e){}},saveRemoteRevisionsToIndexedDB:async function(t){if(!t||Array.isArray(t)&&0===t.length)return;let a=e.db;await a.init("themeover_db","revision_table"),Array.isArray(t)||(t=[t]),t=t.slice().reverse();for(const e of t)e.revision_id&&await a.save("revision_table",{id:`${e.revision_id}`,revisionId:e.revision_id,timestamp:Date.now(),user_action:e.user_action,settings:e.settings,snippets:e.snippets,preferences:e.preferences})},initRevisionStackTask:async(e,a)=>{(await t.getRevisionIds({sortDesc:!0})).length||await t.pullRevisionsFromServer({ajaxUrl:e.ajaxUrl,recent:e.recent||5},a);const s=await t.initRevisionStack(e);t.postMessage({log:"Revision stack initialized from IndexedDB",stack:s},e)},initRevisionStack:async e=>{const a=t.revision.stack,s=await t.getRevisionIds({sortDesc:!0});if(!s.length)return a.current=null,a.undo=[],void(a.redo=[]);const i=String(e.current_revision||s[0].id),n=s.findIndex((e=>e.id==i));return a.current=n>=0?s[n].id:s[0].id,a.undo=s.slice(n+1).map((e=>e.id)).reverse(),a.redo=s.slice(0,n).map((e=>e.id)),a},saveRevision:async function(a,s,i){const n=s.revision_id,o=s.revision;if(n&&o)try{let a=e.db;await a.init("themeover_db","revision_table");const r=`${n}`;await a.save("revision_table",{id:r,revisionId:n,timestamp:Date.now(),user_action:o.user_action,settings:o.settings,snippets:o.snippets}),await t.deleteRevisionsByIds(t.revision.stack.redo),await t.cleanupOldRevisions(t.maxRevisions),await t.initRevisionStack({current_revision:n}),i.stack=t.revision.stack,delete s.revision}catch(e){console.error(`Error copying revision ${n} to IndexedDB:`,e)}},cleanupOldRevisions:async function(a){try{const s=(await t.getRevisionIds({sortDesc:!0})).slice(a);for(const t of s)await e.db.delete("revision_table",t.id)}catch(e){}},getRevisionStack:(e,a)=>{t.postMessage({log:"Returning current revision stack",stack:t.revision.stack},e)},switchToRevisionFromStack:async function({sourceStack:a,targetStack:s,actionLabel:i},n){const o=t.revision.stack;if(0===o[a].length)return void t.postMessage({log:`Nothing to ${i.toLowerCase()}`,failure:!0},n);o[s].push(o.current),o.current=o[a].pop();const r=e.db;await r.init("themeover_db","revision_table");const l=await r.get("revision_table",o.current);t.postMessage({log:`${i} to revision ${o.current}`,revision:l,stack:o},n)},undoRevision:async function(e,a){await t.switchToRevisionFromStack({sourceStack:"undo",targetStack:"redo",actionLabel:"Undo"},e)},redoRevision:async function(e,a){await t.switchToRevisionFromStack({sourceStack:"redo",targetStack:"undo",actionLabel:"Redo"},e)},restoreRevisionById:async function(a,s){const i=a.revision_id;if(!i)return void t.postMessage({log:"No revision_id provided for restore",failure:!0},a);let n=null;try{let t=e.db;await t.init("themeover_db","revision_table"),n=await t.get("revision_table",String(i))}catch(e){console.error("Error checking IndexedDB for revision:",e)}if(!n){const o=(await t.ajaxFetch({url:a.ajaxUrl+"&copy_revision_locally&revision_id="+i,dataType:"json"},s)).responseData;if(o&&o.revision_id){await t.saveRemoteRevisionsToIndexedDB(o);let a=e.db;await a.init("themeover_db","revision_table"),n=await a.get("revision_table",String(o.revision_id))}}n?(await t.initRevisionStack({current_revision:i}),t.postMessage({log:`Restored revision ${i}`,revision:n,stack:t.revision.stack},a)):t.postMessage({log:`Failed to restore revision ${i}`,failure:!0},a)},deleteRevisionsByIds:async function(t=[]){if(t.length)try{let a=e.db;await a.init("themeover_db","revision_table");for(const e of t)await a.delete("revision_table",e)}catch(e){}},revision:{stack:{current:null,undo:[],redo:[]}}}}();